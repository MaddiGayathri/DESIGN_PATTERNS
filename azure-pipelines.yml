# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

# trigger:
# - master

# pool:
#   vmImage: ubuntu-latest

# steps:
# - script: echo Hello, world!
#   displayName: 'Run a one-line script'

# - script: |
#     echo Add other tasks to build, test, and deploy your project.
#     echo See https://aka.ms/yaml
#   displayName: 'Run a multi-line script'



# Trigger pipeline on every push to the main branch
trigger:
- main

# Use the latest Ubuntu machine for build
pool:
  vmImage: 'ubuntu-latest'

# Define pipeline stages
stages:
- stage: Build
  displayName: 'Build and Test Java App'
  jobs:
  - job: Build
    steps:
    - task: Maven@3
      displayName: 'Build the project with Maven'
      inputs:
        mavenPomFile: 'pom.xml'  # Path to Maven's pom.xml
        goals: 'clean package'
        publishJUnitResults: true
        testResultsFiles: '**/target/surefire-reports/TEST-*.xml'

    - task: CopyFiles@2
      displayName: 'Copy build artifacts'
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)/target'
        Contents: '**/*.jar'  # Change to **/*.war for a WAR file
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish build artifacts'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'

- stage: Deploy
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: Deploy
    steps:
    - task: DownloadBuildArtifacts@0
      displayName: 'Download build artifacts'
      inputs:
        buildType: 'current'
        artifactName: 'drop'
        downloadPath: '$(System.ArtifactsDirectory)'

    - task: AzureWebApp@1
      displayName: 'Deploy to Azure App Service'
      inputs:
        azureSubscription: '<Your-Azure-Service-Connection>'  # Set up a service connection in Azure DevOps
        appName: '<Your-App-Service-Name>'  # Replace with your Azure App Service name
        package: '$(System.ArtifactsDirectory)/drop/**/*.jar'  # Change to **/*.war for a WAR file
